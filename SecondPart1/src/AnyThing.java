
public class AnyThing {
	/**
	 * 构造方法是一个与类同名的方法, 对象的创建就是通过构造方法完成的, 每当实例化一个对象时, 类都会自动调用构造方法
	 * 构造方法没有返回值
	 * 构造方法名要与类名相同
	 * 如果在勒种定义的构造方法都不是无参数的构造方法, 则编译器不会为类设置一个默认的无参数构造方法, 党试图调用无参数构造方法实例化一个对象时, 编译器会报错, 所以只有在类中没有定义任何构造方法时, 编译器才回在类中自动创建一个不带参数的构造方法
	 * */
	public AnyThing() {
		this("this调用有参数的构造方法"); // 只可以在无参数的构造方法第一句使用this调用有参数的构造方法
		System.out.println("无参数构造方法");
	}

	public AnyThing(String name) {
		System.out.println("有参数的构造方法");
	}
	
	public static void main(String[] args) {
		// 类的主方法, 定义了程序从何处开始, 主方法提供对程序流向的控制, Java编译器通过主方法来执行程序
		// 主方法是静态的, 在主方法中调用其他方法, 则该方法必须也是静态的
		// 主方法没有返回值
		// 主方法的形参为数组
		for (int i = 0; i < args.length; i++) {
			System.out.println(args[i]); // 循环打印参数内容
		}
		
	}
}
